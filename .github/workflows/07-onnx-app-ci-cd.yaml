name: 07 - CI/CD for FastApi ONNX inference

on:
  workflow_dispatch:
    inputs:
      steps:
        description: 'Select steps to run'
        required: true
        type: choice
        options:
          - integration
          - all
        default: all


jobs:
  integration:
    name: continuous-integration
    if: ${{ inputs.steps == 'all' || inputs.steps == 'integration' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 04-using-actions
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install Dependencies
        run: |
          uv sync --group integration
      - name: Run Ruff Check
        run: |
          uv run ruff check . --fix
      - name: Run Ruff Format
        run: |
          uv run ruff format .
      - name: Run Pip Audit
        run: |
          uv run pip-audit --vulnerability-service pypi
      - name: Run PyTest
        run: |
          uv run pytest tests

  deployment:
    name: continuous-deployment
    runs-on: ubuntu-latest
    needs: integration
    if: ${{ inputs.steps == 'all' && needs.integration.result == 'success' || inputs.steps == 'deployment' }}
    defaults:
      run:
        working-directory: 04-using-actions
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install Dependencies
        run: |
          uv sync --group deployment
      - name: Download model
        run: |
          uv run python main.py --script download
      - name: Export model to onnx
        run: |
          uv run python main.py --script export
      - name: Build Docker
        run: |
         docker build -t polish-sentiment-app-onnx:latest .
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
